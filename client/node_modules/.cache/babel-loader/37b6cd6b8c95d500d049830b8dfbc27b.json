{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RollUpdater = void 0;\n\nconst Utils_1 = require(\"../../Utils\");\n\nconst Enums_1 = require(\"../../Enums\");\n\nfunction updateRoll(particle, delta) {\n  const roll = particle.options.roll;\n\n  if (!particle.roll || !roll.enable) {\n    return;\n  }\n\n  const speed = particle.roll.speed * delta.factor;\n  const max = 2 * Math.PI;\n  particle.roll.angle += speed;\n\n  if (particle.roll.angle > max) {\n    particle.roll.angle -= max;\n  }\n}\n\nclass RollUpdater {\n  init(particle) {\n    const rollOpt = particle.options.roll;\n\n    if (rollOpt.enable) {\n      particle.roll = {\n        angle: Math.random() * Math.PI * 2,\n        speed: (0, Utils_1.getRangeValue)(rollOpt.speed) / 360\n      };\n\n      if (rollOpt.backColor) {\n        particle.backColor = (0, Utils_1.colorToHsl)(rollOpt.backColor);\n      } else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n        const alterType = Math.random() >= 0.5 ? Enums_1.AlterType.darken : Enums_1.AlterType.enlighten;\n        particle.roll.alter = {\n          type: alterType,\n          value: alterType === Enums_1.AlterType.darken ? rollOpt.darken.value : rollOpt.enlighten.value\n        };\n      } else if (rollOpt.darken.enable) {\n        particle.roll.alter = {\n          type: Enums_1.AlterType.darken,\n          value: rollOpt.darken.value\n        };\n      } else if (rollOpt.enlighten.enable) {\n        particle.roll.alter = {\n          type: Enums_1.AlterType.enlighten,\n          value: rollOpt.enlighten.value\n        };\n      }\n    } else {\n      particle.roll = {\n        angle: 0,\n        speed: 0\n      };\n    }\n  }\n\n  isEnabled(particle) {\n    const roll = particle.options.roll;\n    return !particle.destroyed && !particle.spawning && roll.enable;\n  }\n\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n\n    updateRoll(particle, delta);\n  }\n\n}\n\nexports.RollUpdater = RollUpdater;","map":{"version":3,"sources":["C:/Users/64225/OneDrive/Documents/REACT/React-21-folio/client/node_modules/tsparticles/Updaters/Roll/RollUpdater.js"],"names":["Object","defineProperty","exports","value","RollUpdater","Utils_1","require","Enums_1","updateRoll","particle","delta","roll","options","enable","speed","factor","max","Math","PI","angle","init","rollOpt","random","getRangeValue","backColor","colorToHsl","darken","enlighten","alterType","AlterType","alter","type","isEnabled","destroyed","spawning","update"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RollUpdater = void 0;\r\nconst Utils_1 = require(\"../../Utils\");\r\nconst Enums_1 = require(\"../../Enums\");\r\nfunction updateRoll(particle, delta) {\r\n    const roll = particle.options.roll;\r\n    if (!particle.roll || !roll.enable) {\r\n        return;\r\n    }\r\n    const speed = particle.roll.speed * delta.factor;\r\n    const max = 2 * Math.PI;\r\n    particle.roll.angle += speed;\r\n    if (particle.roll.angle > max) {\r\n        particle.roll.angle -= max;\r\n    }\r\n}\r\nclass RollUpdater {\r\n    init(particle) {\r\n        const rollOpt = particle.options.roll;\r\n        if (rollOpt.enable) {\r\n            particle.roll = {\r\n                angle: Math.random() * Math.PI * 2,\r\n                speed: (0, Utils_1.getRangeValue)(rollOpt.speed) / 360,\r\n            };\r\n            if (rollOpt.backColor) {\r\n                particle.backColor = (0, Utils_1.colorToHsl)(rollOpt.backColor);\r\n            }\r\n            else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\r\n                const alterType = Math.random() >= 0.5 ? Enums_1.AlterType.darken : Enums_1.AlterType.enlighten;\r\n                particle.roll.alter = {\r\n                    type: alterType,\r\n                    value: alterType === Enums_1.AlterType.darken ? rollOpt.darken.value : rollOpt.enlighten.value,\r\n                };\r\n            }\r\n            else if (rollOpt.darken.enable) {\r\n                particle.roll.alter = {\r\n                    type: Enums_1.AlterType.darken,\r\n                    value: rollOpt.darken.value,\r\n                };\r\n            }\r\n            else if (rollOpt.enlighten.enable) {\r\n                particle.roll.alter = {\r\n                    type: Enums_1.AlterType.enlighten,\r\n                    value: rollOpt.enlighten.value,\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            particle.roll = { angle: 0, speed: 0 };\r\n        }\r\n    }\r\n    isEnabled(particle) {\r\n        const roll = particle.options.roll;\r\n        return !particle.destroyed && !particle.spawning && roll.enable;\r\n    }\r\n    update(particle, delta) {\r\n        if (!this.isEnabled(particle)) {\r\n            return;\r\n        }\r\n        updateRoll(particle, delta);\r\n    }\r\n}\r\nexports.RollUpdater = RollUpdater;\r\n"]},"metadata":{},"sourceType":"script"}