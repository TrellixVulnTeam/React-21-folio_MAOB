{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Dropbox\\\\My PC (DESKTOP-1PF0QF4)\\\\Documents\\\\Web-dev\\\\React-21-folio\\\\src\\\\components\\\\TrimcateText.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReadTrunk(_ref) {\n  _s();\n\n  let {\n    children,\n    maxCharacterCount = 300\n  } = _ref;\n  const text = children;\n  const [isTruncated, setIsTruncated] = useState(true);\n  const resultingString = isTruncated ? text.slice(0, maxCharacterCount) : text;\n\n  function toggleIsTruncated() {\n    setIsTruncated(!isTruncated);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [resultingString, /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: toggleIsTruncated,\n      children: isTruncated ? \"READ MORE\" : \"READ LESS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ReadTrunk, \"uF82jnWCCSUpvNXCPQ4j8f4VtcY=\");\n\n_c = ReadTrunk;\n;\nexport default ReadTrunk;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadTrunk\");","map":{"version":3,"sources":["C:/Users/HP/Dropbox/My PC (DESKTOP-1PF0QF4)/Documents/Web-dev/React-21-folio/src/components/TrimcateText.js"],"names":["React","useState","useStyles","makeStyles","ReadTrunk","children","maxCharacterCount","text","isTruncated","setIsTruncated","resultingString","slice","toggleIsTruncated"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,SAAR,EAAmBC,UAAnB,QAAqC,0BAArC;;;AAGA,SAASC,SAAT,OAAwD;AAAA;;AAAA,MAArC;AAACC,IAAAA,QAAD;AAAWC,IAAAA,iBAAiB,GAAG;AAA/B,GAAqC;AACpD,QAAMC,IAAI,GAAGF,QAAb;AAEA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,IAAD,CAA9C;AAEA,QAAMS,eAAe,GAAGF,WAAW,GAAGD,IAAI,CAACI,KAAL,CAAW,CAAX,EAAcL,iBAAd,CAAH,GAAqCC,IAAxE;;AAEA,WAASK,iBAAT,GAA6B;AAE3BH,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACD;;AACD,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,eACCE,eADD,eAEA;AAAM,MAAA,OAAO,EAAIE,iBAAjB;AAAA,gBACGJ,WAAW,GAAG,WAAH,GAAiB;AAD/B;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAnBMJ,S;;KAAAA,S;AAmBN;AAGD,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {useStyles, makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nfunction ReadTrunk({children, maxCharacterCount = 300}) {\r\n    const text = children;\r\n    \r\n    const [isTruncated, setIsTruncated] = useState(true);\r\n    \r\n    const resultingString = isTruncated ? text.slice(0, maxCharacterCount): text;\r\n    \r\n    function toggleIsTruncated() {\r\n      \r\n      setIsTruncated(!isTruncated);\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n      {resultingString}\r\n      <span onClick = {toggleIsTruncated}>\r\n        {isTruncated ? \"READ MORE\" : \"READ LESS\"}\r\n      </span>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n  \r\n\r\n  export default ReadTrunk;\r\n  "]},"metadata":{},"sourceType":"module"}