{"ast":null,"code":"import _defineProperty from\"C:/Users/64225/OneDrive/Documents/REACT/React-21-folio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"C:/Users/64225/OneDrive/Documents/REACT/React-21-folio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{makeStyles}from\"@material-ui/core/styles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ReadTrunk(_ref){var children=_ref.children,_ref$maxCharacterCoun=_ref.maxCharacterCount,maxCharacterCount=_ref$maxCharacterCoun===void 0?300:_ref$maxCharacterCoun;var classes=useStyles();var text=children;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isTruncated=_useState2[0],setIsTruncated=_useState2[1];var resultingString=isTruncated?text.slice(0,maxCharacterCount):text;function toggleIsTruncated(){setIsTruncated(!isTruncated);}return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"p\",{className:classes.truncate,children:[resultingString,/*#__PURE__*/_jsx(\"span\",{onClick:toggleIsTruncated,className:classes.toggleIsTruncated,children:isTruncated?\"Read more\":\"Read less\"})]})});};var useStyles=makeStyles(function(theme){var _toggleIsTruncated;return{truncate:{display:\"block\"},toggleIsTruncated:(_toggleIsTruncated={width:\"33%\",borderRadius:\"7px\",margin:\"10px\",color:\"var(--color-widget)\",fontSize:\"11.5px\",textAlign:\"center\",cursor:\"pointer\",fontStyle:\"italic\"},_defineProperty(_toggleIsTruncated,theme.breakpoints.up(\"md\"),{width:\"24%\"}),_defineProperty(_toggleIsTruncated,\"&:hover\",{fontStyle:\"normal\"}),_toggleIsTruncated)};});export default ReadTrunk;","map":{"version":3,"sources":["C:/Users/64225/OneDrive/Documents/REACT/React-21-folio/client/src/components/TrimcateText.js"],"names":["React","useState","makeStyles","ReadTrunk","children","maxCharacterCount","classes","useStyles","text","isTruncated","setIsTruncated","resultingString","slice","toggleIsTruncated","truncate","theme","display","width","borderRadius","margin","color","fontSize","textAlign","cursor","fontStyle","breakpoints","up"],"mappings":"0WAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAAQC,UAAR,KAA0B,0BAA1B,C,wFAGA,QAASC,CAAAA,SAAT,MAAwD,IAApCC,CAAAA,QAAoC,MAApCA,QAAoC,4BAA1BC,iBAA0B,CAA1BA,iBAA0B,gCAAN,GAAM,uBACtD,GAAMC,CAAAA,OAAO,CAAGC,SAAS,EAAzB,CAEE,GAAMC,CAAAA,IAAI,CAAGJ,QAAb,CAEA,cAAsCH,QAAQ,CAAC,IAAD,CAA9C,wCAAOQ,WAAP,eAAoBC,cAApB,eAEA,GAAMC,CAAAA,eAAe,CAAGF,WAAW,CAAGD,IAAI,CAACI,KAAL,CAAW,CAAX,CAAcP,iBAAd,CAAH,CAAqCG,IAAxE,CAEA,QAASK,CAAAA,iBAAT,EAA6B,CAE3BH,cAAc,CAAC,CAACD,WAAF,CAAd,CACD,CACD,mBACE,KAAC,KAAD,CAAO,QAAP,wBACA,WAAG,SAAS,CAAEH,OAAO,CAACQ,QAAtB,WACCH,eADD,cAEA,aAAM,OAAO,CAAIE,iBAAjB,CAAoC,SAAS,CAAEP,OAAO,CAACO,iBAAvD,UACGJ,WAAW,CAAG,WAAH,CAAiB,WAD/B,EAFA,GADA,EADF,CAUD,EAGD,GAAMF,CAAAA,SAAS,CAAGL,UAAU,CAAC,SAACa,KAAD,+BAAY,CACvCD,QAAQ,CAAE,CACNE,OAAO,CAAE,OADH,CAD6B,CAIvCH,iBAAiB,sBACbI,KAAK,CAAE,KADM,CAEbC,YAAY,CAAE,KAFD,CAGbC,MAAM,CAAE,MAHK,CAIbC,KAAK,CAAE,qBAJM,CAKbC,QAAQ,CAAE,QALG,CAMbC,SAAS,CAAE,QANE,CAObC,MAAM,CAAE,SAPK,CASbC,SAAS,CAAE,QATE,qCAUZT,KAAK,CAACU,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAVY,CAUiB,CAC5BT,KAAK,CAAE,KADqB,CAVjB,qCAab,SAba,CAaF,CACPO,SAAS,CAAE,QADJ,CAbE,qBAJsB,CAAZ,EAAD,CAA5B,CAwBA,cAAerB,CAAAA,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nfunction ReadTrunk({children, maxCharacterCount = 300}) {\r\n  const classes = useStyles();\r\n    \r\n    const text = children;\r\n    \r\n    const [isTruncated, setIsTruncated] = useState(true);\r\n    \r\n    const resultingString = isTruncated ? text.slice(0, maxCharacterCount): text;\r\n    \r\n    function toggleIsTruncated() {\r\n      \r\n      setIsTruncated(!isTruncated);\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n      <p className={classes.truncate}>\r\n      {resultingString}\r\n      <span onClick = {toggleIsTruncated} className={classes.toggleIsTruncated}>\r\n        {isTruncated ? \"Read more\" : \"Read less\"}\r\n      </span>\r\n      </p>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n  \r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    truncate: {\r\n        display: \"block\",\r\n    },\r\n    toggleIsTruncated: {\r\n        width: \"33%\",\r\n        borderRadius: \"7px\",\r\n        margin: \"10px\",\r\n        color: \"var(--color-widget)\",\r\n        fontSize: \"11.5px\",\r\n        textAlign: \"center\",\r\n        cursor: \"pointer\",\r\n        \r\n        fontStyle: \"italic\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n          width: \"24%\",  \r\n        },\r\n        \"&:hover\": {\r\n            fontStyle: \"normal\",\r\n        }\r\n    }\r\n  }));\r\n  \r\n\r\n  export default ReadTrunk;\r\n  "]},"metadata":{},"sourceType":"module"}