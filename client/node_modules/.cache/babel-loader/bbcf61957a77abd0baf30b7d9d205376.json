{"ast":null,"code":"import * as React from \"react\";\n\nvar ViewportListener = function (props) {\n  var id = props.id,\n      children = props.children,\n      onViewportVisible = props.onViewportVisible,\n      _a = props.enabled,\n      enabled = _a === void 0 ? false : _a;\n  React.useEffect(function () {\n    if (!enabled) return;\n    window.addEventListener(\"scroll\", onScroll);\n    onScroll();\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  });\n\n  var onScroll = function () {\n    if (!enabled) return;\n    var animatedElements = document.getElementById(id);\n    var isActive = isInViewport(animatedElements);\n\n    if (isActive) {\n      window.removeEventListener(\"scroll\", onScroll);\n      onViewportVisible();\n    }\n  };\n\n  return React.createElement(React.Fragment, null, children);\n};\n\nvar isInViewport = function (element, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  if (!element) return false;\n  var top = element.getBoundingClientRect().top;\n  return top + offset >= 0 && top - offset <= window.innerHeight;\n};\n\nexport default ViewportListener;","map":{"version":3,"sources":["C:/Users/HP/Dropbox/My PC (DESKTOP-1PF0QF4)/Documents/Web-dev/React-21-folio/node_modules/react-animista/dist/src/core/ViewportListener.js"],"names":["React","ViewportListener","props","id","children","onViewportVisible","_a","enabled","useEffect","window","addEventListener","onScroll","removeEventListener","animatedElements","document","getElementById","isActive","isInViewport","createElement","Fragment","element","offset","top","getBoundingClientRect","innerHeight"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AACA,IAAIC,gBAAgB,GAAG,UAAUC,KAAV,EAAiB;AACpC,MAAIC,EAAE,GAAGD,KAAK,CAACC,EAAf;AAAA,MAAmBC,QAAQ,GAAGF,KAAK,CAACE,QAApC;AAAA,MAA8CC,iBAAiB,GAAGH,KAAK,CAACG,iBAAxE;AAAA,MAA2FC,EAAE,GAAGJ,KAAK,CAACK,OAAtG;AAAA,MAA+GA,OAAO,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAAjJ;AACAN,EAAAA,KAAK,CAACQ,SAAN,CAAgB,YAAY;AACxB,QAAI,CAACD,OAAL,EACI;AACJE,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,QAAlC;AACAA,IAAAA,QAAQ;AACR,WAAO,YAAY;AACfF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCD,QAArC;AACH,KAFD;AAGH,GARD;;AASA,MAAIA,QAAQ,GAAG,YAAY;AACvB,QAAI,CAACJ,OAAL,EACI;AACJ,QAAIM,gBAAgB,GAAGC,QAAQ,CAACC,cAAT,CAAwBZ,EAAxB,CAAvB;AACA,QAAIa,QAAQ,GAAGC,YAAY,CAACJ,gBAAD,CAA3B;;AACA,QAAIG,QAAJ,EAAc;AACVP,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCD,QAArC;AACAN,MAAAA,iBAAiB;AACpB;AACJ,GATD;;AAUA,SAAOL,KAAK,CAACkB,aAAN,CAAoBlB,KAAK,CAACmB,QAA1B,EAAoC,IAApC,EAA0Cf,QAA1C,CAAP;AACH,CAtBD;;AAuBA,IAAIa,YAAY,GAAG,UAAUG,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C,MAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,IAAAA,MAAM,GAAG,CAAT;AAAa;;AACtC,MAAI,CAACD,OAAL,EACI,OAAO,KAAP;AACJ,MAAIE,GAAG,GAAGF,OAAO,CAACG,qBAAR,GAAgCD,GAA1C;AACA,SAAOA,GAAG,GAAGD,MAAN,IAAgB,CAAhB,IAAqBC,GAAG,GAAGD,MAAN,IAAgBZ,MAAM,CAACe,WAAnD;AACH,CAND;;AAOA,eAAevB,gBAAf","sourcesContent":["import * as React from \"react\";\nvar ViewportListener = function (props) {\n    var id = props.id, children = props.children, onViewportVisible = props.onViewportVisible, _a = props.enabled, enabled = _a === void 0 ? false : _a;\n    React.useEffect(function () {\n        if (!enabled)\n            return;\n        window.addEventListener(\"scroll\", onScroll);\n        onScroll();\n        return function () {\n            window.removeEventListener(\"scroll\", onScroll);\n        };\n    });\n    var onScroll = function () {\n        if (!enabled)\n            return;\n        var animatedElements = document.getElementById(id);\n        var isActive = isInViewport(animatedElements);\n        if (isActive) {\n            window.removeEventListener(\"scroll\", onScroll);\n            onViewportVisible();\n        }\n    };\n    return React.createElement(React.Fragment, null, children);\n};\nvar isInViewport = function (element, offset) {\n    if (offset === void 0) { offset = 0; }\n    if (!element)\n        return false;\n    var top = element.getBoundingClientRect().top;\n    return top + offset >= 0 && top - offset <= window.innerHeight;\n};\nexport default ViewportListener;\n"]},"metadata":{},"sourceType":"module"}