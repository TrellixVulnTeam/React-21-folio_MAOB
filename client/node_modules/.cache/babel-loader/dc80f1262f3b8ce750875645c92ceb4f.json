{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Dropbox\\\\My PC (DESKTOP-1PF0QF4)\\\\Documents\\\\Web-dev\\\\React-21-folio\\\\src\\\\components\\\\TrimcateText.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReadTrunk(_ref) {\n  _s();\n\n  let {\n    children,\n    maxCharacterCount = 300\n  } = _ref;\n  const classes = useStyles();\n  const text = children;\n  const [isTruncated, setIsTruncated] = useState(true);\n  const resultingString = isTruncated ? text.slice(0, maxCharacterCount) : text;\n\n  function toggleIsTruncated() {\n    setIsTruncated(!isTruncated);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.truncate,\n      children: [resultingString, /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: toggleIsTruncated,\n        className: classes.toggleIsTruncated,\n        children: isTruncated ? \"READ MORE\" : \"READ LESS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ReadTrunk, \"BixY+0CRoA/39YSA/Ojz2PUkQac=\", false, function () {\n  return [useStyles];\n});\n\n_c = ReadTrunk;\n;\nconst useStyles = makeStyles(theme => ({\n  truncate: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  toggleIsTruncated: {\n    padding: \"8px\",\n    background: \"var(--color-bg)\",\n    width: \"23%\",\n    borderRadius: \"7px\",\n    margin: \"20px\",\n    boxShadow: \"var(--color-shadow)\",\n    fontSize: \"14.4px\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      boxShadow: \"var(--hover-shadow)\"\n    }\n  }\n}));\nexport default ReadTrunk;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadTrunk\");","map":{"version":3,"sources":["C:/Users/HP/Dropbox/My PC (DESKTOP-1PF0QF4)/Documents/Web-dev/React-21-folio/src/components/TrimcateText.js"],"names":["React","useState","makeStyles","ReadTrunk","children","maxCharacterCount","classes","useStyles","text","isTruncated","setIsTruncated","resultingString","slice","toggleIsTruncated","truncate","theme","display","flexDirection","padding","background","width","borderRadius","margin","boxShadow","fontSize","textAlign","cursor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,UAAR,QAA0B,0BAA1B;;;AAGA,SAASC,SAAT,OAAwD;AAAA;;AAAA,MAArC;AAACC,IAAAA,QAAD;AAAWC,IAAAA,iBAAiB,GAAG;AAA/B,GAAqC;AACtD,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AAEE,QAAMC,IAAI,GAAGJ,QAAb;AAEA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;AAEA,QAAMU,eAAe,GAAGF,WAAW,GAAGD,IAAI,CAACI,KAAL,CAAW,CAAX,EAAcP,iBAAd,CAAH,GAAqCG,IAAxE;;AAEA,WAASK,iBAAT,GAA6B;AAE3BH,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACD;;AACD,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACA;AAAG,MAAA,SAAS,EAAEH,OAAO,CAACQ,QAAtB;AAAA,iBACCH,eADD,eAEA;AAAM,QAAA,OAAO,EAAIE,iBAAjB;AAAoC,QAAA,SAAS,EAAEP,OAAO,CAACO,iBAAvD;AAAA,kBACGJ,WAAW,GAAG,WAAH,GAAiB;AAD/B;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAvBMN,S;UACSI,S;;;KADTJ,S;AAuBN;AAGD,MAAMI,SAAS,GAAGL,UAAU,CAAEa,KAAD,KAAY;AACvCD,EAAAA,QAAQ,EAAE;AACNE,IAAAA,OAAO,EAAE,MADH;AAENC,IAAAA,aAAa,EAAE;AAFT,GAD6B;AAKvCJ,EAAAA,iBAAiB,EAAE;AACfK,IAAAA,OAAO,EAAE,KADM;AAEfC,IAAAA,UAAU,EAAE,iBAFG;AAGfC,IAAAA,KAAK,EAAE,KAHQ;AAIfC,IAAAA,YAAY,EAAE,KAJC;AAKfC,IAAAA,MAAM,EAAE,MALO;AAMfC,IAAAA,SAAS,EAAE,qBANI;AAOfC,IAAAA,QAAQ,EAAE,QAPK;AAQfC,IAAAA,SAAS,EAAE,QARI;AASfC,IAAAA,MAAM,EAAE,SATO;AAUf,eAAW;AACPH,MAAAA,SAAS,EAAE;AADJ;AAVI;AALoB,CAAZ,CAAD,CAA5B;AAsBA,eAAepB,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nfunction ReadTrunk({children, maxCharacterCount = 300}) {\r\n  const classes = useStyles();\r\n    \r\n    const text = children;\r\n    \r\n    const [isTruncated, setIsTruncated] = useState(true);\r\n    \r\n    const resultingString = isTruncated ? text.slice(0, maxCharacterCount): text;\r\n    \r\n    function toggleIsTruncated() {\r\n      \r\n      setIsTruncated(!isTruncated);\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n      <p className={classes.truncate}>\r\n      {resultingString}\r\n      <span onClick = {toggleIsTruncated} className={classes.toggleIsTruncated}>\r\n        {isTruncated ? \"READ MORE\" : \"READ LESS\"}\r\n      </span>\r\n      </p>\r\n      </React.Fragment>\r\n    )\r\n  };\r\n  \r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    truncate: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    toggleIsTruncated: {\r\n        padding: \"8px\",\r\n        background: \"var(--color-bg)\",\r\n        width: \"23%\",\r\n        borderRadius: \"7px\",\r\n        margin: \"20px\",\r\n        boxShadow: \"var(--color-shadow)\",\r\n        fontSize: \"14.4px\",\r\n        textAlign: \"center\",\r\n        cursor: \"pointer\",\r\n        \"&:hover\": {\r\n            boxShadow: \"var(--hover-shadow)\",\r\n        }\r\n    }\r\n  }));\r\n  \r\n\r\n  export default ReadTrunk;\r\n  "]},"metadata":{},"sourceType":"module"}