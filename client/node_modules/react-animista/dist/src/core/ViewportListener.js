import * as React from "react";
var ViewportListener = function (props) {
    var id = props.id, children = props.children, onViewportVisible = props.onViewportVisible, _a = props.enabled, enabled = _a === void 0 ? false : _a;
    React.useEffect(function () {
        if (!enabled)
            return;
        window.addEventListener("scroll", onScroll);
        onScroll();
        return function () {
            window.removeEventListener("scroll", onScroll);
        };
    });
    var onScroll = function () {
        if (!enabled)
            return;
        var animatedElements = document.getElementById(id);
        var isActive = isInViewport(animatedElements);
        if (isActive) {
            window.removeEventListener("scroll", onScroll);
            onViewportVisible();
        }
    };
    return React.createElement(React.Fragment, null, children);
};
var isInViewport = function (element, offset) {
    if (offset === void 0) { offset = 0; }
    if (!element)
        return false;
    var top = element.getBoundingClientRect().top;
    return top + offset >= 0 && top - offset <= window.innerHeight;
};
export default ViewportListener;
